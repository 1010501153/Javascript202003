数组的方法
 1) 方法的作用
 2) 是否需要传参
 3) 方法的返回值是什么
 4) 原有数组是否发生改变；

 1.push
   1) 向数组的末尾新增一项或多项
   2) 需要传参
   3) 是新增以后数组的长度
   4) 原数组发生改变
2.pop
    1) 删除数组的最后一项
    2) 不需要传参
    3) 删除的那一项
    4) 原有数组发生改变
3.unshift
    1) 向数组的开头新增一项或多项
    2) 需要传参
    3) 新增以后数组的长度
    4) 原有数组发生改变
4.shift
    1) 删除数组的第一项
    2) 不需要传参数
    3) 删除的那一项
    4) 原有数组发生改变
5.splice
    1) 删除数组的某几项
    2)  splice(m,n) 从数组索引m开始，删除n项；
        splice(m) 从索引m开始，删除到末尾；
        splice(m,x,n) 从索引m开始，删除x个，用n替换；
        splice(m,0,n) 把n项添加到索引m的前面；
    3) 返回删除那几项组成的数组
    4) 原数组发生改变
6.slice 
    1)截取数组中的几项
    2)需要传参
        slice(m,n) 从索引m开始，截取到索引n,但是不包含索引n;
        m>n 截取一个空数组
        slice(m,n) m<0或n<0; slice(m.length+n);将这个负数转成正数
        slice(m) 从索引m开始，截取到数组的末尾
    3)截取的哪几项
    4)原有数组不发生改变
7.sort
    1)排序
    2)需要参数
        ary.sort(function(a,b){return a-b}) 从小到大
        ary.sort(function(a,b){return b-a}) 从大到小
    3)排序以后的数组
    4)原有数组发生改变
8.reverse 
    1)将数组反转；
    2) 不需要传参
    3)反转之后的数组
    4)原有数组发生改变
9.concat
    1) 数组的拼接
    2) 需要传参
    3) 拼接以后的数组
    4) 原数组不发生改变
10.join
    1) 将数组成员按照特定的字符连接到一起
    2) 需要传参
    3) 返回一个连接的字符串
    4) 原有的数组不发生改变
11.indexOf 
    1) 找到数组成员在数组中第一次出现对应的索引位置，如果不存在，返回-1；所以也经常用来判断该项是否在数组中存在；
    2) 需要传参
    3) 返回数组成员出现的索引
    4) 原数组不发生改变
12.lastIndexOf
    1) 找到数组成员在数组中最后一次出现对应的索引位置，如果不存在，返回-1；所以也经常用来判断该项是否在数组中存在；
    2) 需要传参
    3) 返回数组成员出现的索引
    4) 原数组不发生改变
13.map
    1) 映射，循环
    2)ary.map(function(item,index){})
    3) 映射一个新数组
    4)原数组不发生改变
14.forEach
    1) 循环
    2) ary.forEach(function(item,index){})
    3) undefined
    4) 原数组不发生改变
15.toString
    1)将数组转成字符串
    2)不需要参数
    3)返回一个字符串 
    4)原数组不发生改变
    

